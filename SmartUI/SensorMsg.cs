// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: SensorMsg.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SensorMsg {

  /// <summary>Holder for reflection information generated from SensorMsg.proto</summary>
  public static partial class SensorMsgReflection {

    #region Descriptor
    /// <summary>File descriptor for SensorMsg.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SensorMsgReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9TZW5zb3JNc2cucHJvdG8SCHR1dG9yaWFsGh9nb29nbGUvcHJvdG9idWYv",
            "dGltZXN0YW1wLnByb3RvIrsBCgpTZW5zb3JEYXRhEhQKDGJhdHRlcnlMZXZl",
            "bBgBIAEoARIOCgZNb3Rpb24YAiABKAgSEwoLVWx0cmF2aW9sZXQYAyABKAES",
            "EQoJTHVtaW5hbmNlGAQgASgBEhgKEFJlbGF0aXZlSHVtaWRpdHkYBSABKAES",
            "EwoLVGVtcGVyYXR1cmUYBiABKAESMAoMbGFzdF91cGRhdGVkGAcgASgLMhou",
            "Z29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEIMqgIJU2Vuc29yTXNnYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SensorMsg.SensorData), global::SensorMsg.SensorData.Parser, new[]{ "BatteryLevel", "Motion", "Ultraviolet", "Luminance", "RelativeHumidity", "Temperature", "LastUpdated" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// [START messages]
  /// </summary>
  public sealed partial class SensorData : pb::IMessage<SensorData> {
    private static readonly pb::MessageParser<SensorData> _parser = new pb::MessageParser<SensorData>(() => new SensorData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SensorData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SensorMsg.SensorMsgReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SensorData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SensorData(SensorData other) : this() {
      batteryLevel_ = other.batteryLevel_;
      motion_ = other.motion_;
      ultraviolet_ = other.ultraviolet_;
      luminance_ = other.luminance_;
      relativeHumidity_ = other.relativeHumidity_;
      temperature_ = other.temperature_;
      lastUpdated_ = other.lastUpdated_ != null ? other.lastUpdated_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SensorData Clone() {
      return new SensorData(this);
    }

    /// <summary>Field number for the "batteryLevel" field.</summary>
    public const int BatteryLevelFieldNumber = 1;
    private double batteryLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double BatteryLevel {
      get { return batteryLevel_; }
      set {
        batteryLevel_ = value;
      }
    }

    /// <summary>Field number for the "Motion" field.</summary>
    public const int MotionFieldNumber = 2;
    private bool motion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Motion {
      get { return motion_; }
      set {
        motion_ = value;
      }
    }

    /// <summary>Field number for the "Ultraviolet" field.</summary>
    public const int UltravioletFieldNumber = 3;
    private double ultraviolet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Ultraviolet {
      get { return ultraviolet_; }
      set {
        ultraviolet_ = value;
      }
    }

    /// <summary>Field number for the "Luminance" field.</summary>
    public const int LuminanceFieldNumber = 4;
    private double luminance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Luminance {
      get { return luminance_; }
      set {
        luminance_ = value;
      }
    }

    /// <summary>Field number for the "RelativeHumidity" field.</summary>
    public const int RelativeHumidityFieldNumber = 5;
    private double relativeHumidity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double RelativeHumidity {
      get { return relativeHumidity_; }
      set {
        relativeHumidity_ = value;
      }
    }

    /// <summary>Field number for the "Temperature" field.</summary>
    public const int TemperatureFieldNumber = 6;
    private double temperature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Temperature {
      get { return temperature_; }
      set {
        temperature_ = value;
      }
    }

    /// <summary>Field number for the "last_updated" field.</summary>
    public const int LastUpdatedFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp lastUpdated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LastUpdated {
      get { return lastUpdated_; }
      set {
        lastUpdated_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SensorData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SensorData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(BatteryLevel, other.BatteryLevel)) return false;
      if (Motion != other.Motion) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Ultraviolet, other.Ultraviolet)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Luminance, other.Luminance)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(RelativeHumidity, other.RelativeHumidity)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Temperature, other.Temperature)) return false;
      if (!object.Equals(LastUpdated, other.LastUpdated)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BatteryLevel != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(BatteryLevel);
      if (Motion != false) hash ^= Motion.GetHashCode();
      if (Ultraviolet != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Ultraviolet);
      if (Luminance != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Luminance);
      if (RelativeHumidity != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(RelativeHumidity);
      if (Temperature != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Temperature);
      if (lastUpdated_ != null) hash ^= LastUpdated.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BatteryLevel != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(BatteryLevel);
      }
      if (Motion != false) {
        output.WriteRawTag(16);
        output.WriteBool(Motion);
      }
      if (Ultraviolet != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Ultraviolet);
      }
      if (Luminance != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Luminance);
      }
      if (RelativeHumidity != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(RelativeHumidity);
      }
      if (Temperature != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(Temperature);
      }
      if (lastUpdated_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(LastUpdated);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BatteryLevel != 0D) {
        size += 1 + 8;
      }
      if (Motion != false) {
        size += 1 + 1;
      }
      if (Ultraviolet != 0D) {
        size += 1 + 8;
      }
      if (Luminance != 0D) {
        size += 1 + 8;
      }
      if (RelativeHumidity != 0D) {
        size += 1 + 8;
      }
      if (Temperature != 0D) {
        size += 1 + 8;
      }
      if (lastUpdated_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastUpdated);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SensorData other) {
      if (other == null) {
        return;
      }
      if (other.BatteryLevel != 0D) {
        BatteryLevel = other.BatteryLevel;
      }
      if (other.Motion != false) {
        Motion = other.Motion;
      }
      if (other.Ultraviolet != 0D) {
        Ultraviolet = other.Ultraviolet;
      }
      if (other.Luminance != 0D) {
        Luminance = other.Luminance;
      }
      if (other.RelativeHumidity != 0D) {
        RelativeHumidity = other.RelativeHumidity;
      }
      if (other.Temperature != 0D) {
        Temperature = other.Temperature;
      }
      if (other.lastUpdated_ != null) {
        if (lastUpdated_ == null) {
          LastUpdated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LastUpdated.MergeFrom(other.LastUpdated);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            BatteryLevel = input.ReadDouble();
            break;
          }
          case 16: {
            Motion = input.ReadBool();
            break;
          }
          case 25: {
            Ultraviolet = input.ReadDouble();
            break;
          }
          case 33: {
            Luminance = input.ReadDouble();
            break;
          }
          case 41: {
            RelativeHumidity = input.ReadDouble();
            break;
          }
          case 49: {
            Temperature = input.ReadDouble();
            break;
          }
          case 58: {
            if (lastUpdated_ == null) {
              LastUpdated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastUpdated);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
